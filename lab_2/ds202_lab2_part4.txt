/**
 * main.c
 */
#include "open_interface.h"
#include "movement.h"
#include "cyBot_uart.h"
#include "lcd.h"
int main(void)
{
     lcd_init();
     lcd_puts("cpr342e");
     oi_t *sensor_data = oi_alloc();
     oi_init(sensor_data);
     cyBot_uart_init();
     while(1){
         char data = cyBot_getByte();
         lcd_printf("%c", (data));
         if(data == 'w'){
             lcd_printf("Moving Forward");
             oi_setWheels(250, 250);
         }
         if(data == 'a'){
             lcd_printf("Moving left");
             oi_setWheels(250, -250);

         }
         if(data == 's'){
             lcd_printf("Moving backwards");
             oi_setWheels(-250, -250);

         }
         if(data == 'd'){
             lcd_printf("Moving right");
             oi_setWheels(-250, 250);

         }
     }
     //Drive in a square
//     move_forward(sensor_data, 500);
//     turn_clockwise(sensor_data, 250);
//     move_forward(sensor_data, 500);
//     turn_clockwise(sensor_data, 250);
//     move_forward(sensor_data, 500);
//     turn_clockwise(sensor_data, 250);
//     move_forward(sensor_data, 500);
//     turn_clockwise(sensor_data, 250);


     oi_free(sensor_data);
	return 0;
	
	
	#include "movement.h"
#include "open_interface.h"

void move_forward(oi_t *sensor, int millimeters){

     double sum = 0;
     oi_setWheels(250, 250); // move forward; full speed
     while (sum < millimeters) {
     oi_update(sensor);
     sum += sensor->distance;
     }
     oi_setWheels(0, 0); // stop
}
void move_backwards(oi_t *sensor, int millimeters){

     double sum = 0;
     oi_setWheels(-250, -250); // move back; full speed
     while (sum < millimeters) {
     oi_update(sensor);
     sum += sensor->distance;
     }
     oi_setWheels(0, 0); // stop
}

void turn_clockwise(oi_t *sensor, int degrees){

    double angle = 0;
    oi_setWheels(-250, 250);
    while (angle > -degrees) {
    oi_update(sensor);
    angle += (sensor->angle / 0.324056);
    }
    oi_setWheels(0, 0); // stop
}
void turn_cclockwise(oi_t *sensor, int degrees){

    double angle = 0;
    oi_setWheels(250, -250);
    while (angle > degrees) {
    oi_update(sensor);
    angle += (sensor->angle / 0.324056);
    }
    oi_setWheels(0, 0); // stop
}
	